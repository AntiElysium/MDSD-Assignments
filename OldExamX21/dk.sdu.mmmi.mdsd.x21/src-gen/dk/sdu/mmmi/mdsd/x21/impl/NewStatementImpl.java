/**
 * generated by Xtext 2.25.0
 */
package dk.sdu.mmmi.mdsd.x21.impl;

import dk.sdu.mmmi.mdsd.x21.Exp;
import dk.sdu.mmmi.mdsd.x21.NewStatement;
import dk.sdu.mmmi.mdsd.x21.X21Package;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>New Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link dk.sdu.mmmi.mdsd.x21.impl.NewStatementImpl#getCustomName <em>Custom Name</em>}</li>
 *   <li>{@link dk.sdu.mmmi.mdsd.x21.impl.NewStatementImpl#getParamNames <em>Param Names</em>}</li>
 *   <li>{@link dk.sdu.mmmi.mdsd.x21.impl.NewStatementImpl#getParamValues <em>Param Values</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NewStatementImpl extends AtomicImpl implements NewStatement
{
  /**
   * The default value of the '{@link #getCustomName() <em>Custom Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCustomName()
   * @generated
   * @ordered
   */
  protected static final String CUSTOM_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCustomName() <em>Custom Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCustomName()
   * @generated
   * @ordered
   */
  protected String customName = CUSTOM_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getParamNames() <em>Param Names</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParamNames()
   * @generated
   * @ordered
   */
  protected EList<String> paramNames;

  /**
   * The cached value of the '{@link #getParamValues() <em>Param Values</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParamValues()
   * @generated
   * @ordered
   */
  protected EList<Exp> paramValues;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NewStatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return X21Package.Literals.NEW_STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCustomName()
  {
    return customName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCustomName(String newCustomName)
  {
    String oldCustomName = customName;
    customName = newCustomName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, X21Package.NEW_STATEMENT__CUSTOM_NAME, oldCustomName, customName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getParamNames()
  {
    if (paramNames == null)
    {
      paramNames = new EDataTypeEList<String>(String.class, this, X21Package.NEW_STATEMENT__PARAM_NAMES);
    }
    return paramNames;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Exp> getParamValues()
  {
    if (paramValues == null)
    {
      paramValues = new EObjectContainmentEList<Exp>(Exp.class, this, X21Package.NEW_STATEMENT__PARAM_VALUES);
    }
    return paramValues;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case X21Package.NEW_STATEMENT__PARAM_VALUES:
        return ((InternalEList<?>)getParamValues()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case X21Package.NEW_STATEMENT__CUSTOM_NAME:
        return getCustomName();
      case X21Package.NEW_STATEMENT__PARAM_NAMES:
        return getParamNames();
      case X21Package.NEW_STATEMENT__PARAM_VALUES:
        return getParamValues();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case X21Package.NEW_STATEMENT__CUSTOM_NAME:
        setCustomName((String)newValue);
        return;
      case X21Package.NEW_STATEMENT__PARAM_NAMES:
        getParamNames().clear();
        getParamNames().addAll((Collection<? extends String>)newValue);
        return;
      case X21Package.NEW_STATEMENT__PARAM_VALUES:
        getParamValues().clear();
        getParamValues().addAll((Collection<? extends Exp>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case X21Package.NEW_STATEMENT__CUSTOM_NAME:
        setCustomName(CUSTOM_NAME_EDEFAULT);
        return;
      case X21Package.NEW_STATEMENT__PARAM_NAMES:
        getParamNames().clear();
        return;
      case X21Package.NEW_STATEMENT__PARAM_VALUES:
        getParamValues().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case X21Package.NEW_STATEMENT__CUSTOM_NAME:
        return CUSTOM_NAME_EDEFAULT == null ? customName != null : !CUSTOM_NAME_EDEFAULT.equals(customName);
      case X21Package.NEW_STATEMENT__PARAM_NAMES:
        return paramNames != null && !paramNames.isEmpty();
      case X21Package.NEW_STATEMENT__PARAM_VALUES:
        return paramValues != null && !paramValues.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (customName: ");
    result.append(customName);
    result.append(", paramNames: ");
    result.append(paramNames);
    result.append(')');
    return result.toString();
  }

} //NewStatementImpl
