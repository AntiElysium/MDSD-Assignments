/*
 * generated by Xtext 2.25.0
 */
package dk.sdu.mmmi.mdsd.scoping

import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference
import dk.sdu.mmmi.mdsd.math.MathPackage
import org.eclipse.xtext.scoping.IScope
import org.eclipse.xtext.scoping.Scopes
import dk.sdu.mmmi.mdsd.math.Letend
import dk.sdu.mmmi.mdsd.math.OriginExp

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class MathScopeProvider extends AbstractMathScopeProvider {
	override getScope(EObject context, EReference reference){
		if(reference == MathPackage.Literals.VARIABLE_USE__REF) {
			return context.gatherVariables
		}
		return super.getScope(context, reference)
	}
	
	def protected IScope gatherVariables(EObject context){
		return switch (context.eContainer) {
			Letend: Scopes.scopeFor(newArrayList(context.eContainer), gatherVariables(context.eContainer))
			OriginExp: Scopes.scopeFor((context.eContainer as OriginExp).expressions.filter[it != context])
			default: gatherVariables(context.eContainer)
		}
	}
}
